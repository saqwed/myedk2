name: windows-edk2

on: push

jobs:
  windows:
    name: windows-build
    runs-on: windows-2019
    strategy:
      fail-fast: false
      matrix:
        include: [
          { NAME: 'AppPkg',         PACKAGE: 'AppPkg/AppPkg.dsc',                                     TARGET: 'RELEASE', ARCH: 'X64',     TOOLCHAIN: 'VS2019',       ADDITIONAL_DEFINITION: '' },
          { NAME: 'AppPkg',         PACKAGE: 'AppPkg/AppPkg.dsc',                                     TARGET: 'DEBUG',   ARCH: 'X64',     TOOLCHAIN: 'VS2019',       ADDITIONAL_DEFINITION: '' },
          { NAME: 'ShellPkg',       PACKAGE: 'ShellPkg/ShellPkg.dsc',                                 TARGET: 'RELEASE', ARCH: 'X64',     TOOLCHAIN: 'VS2019',       ADDITIONAL_DEFINITION: '' },
          { NAME: 'FatPkg',         PACKAGE: 'FatPkg/FatPkg.dsc',                                     TARGET: 'RELEASE', ARCH: 'X64',     TOOLCHAIN: 'VS2019',       ADDITIONAL_DEFINITION: '' },
          { NAME: 'AsixPkg',        PACKAGE: 'Drivers/ASIX/Asix.dsc',                                 TARGET: 'RELEASE', ARCH: 'X64',     TOOLCHAIN: 'VS2019',       ADDITIONAL_DEFINITION: '' },
          { NAME: 'DisplayLinkPkg', PACKAGE: 'Drivers/DisplayLink/DisplayLinkPkg/DisplayLinkPkg.dsc', TARGET: 'RELEASE', ARCH: 'X64',     TOOLCHAIN: 'VS2019',       ADDITIONAL_DEFINITION: '' },
          { NAME: 'OvmfPkg',        PACKAGE: 'OvmfPkg/OvmfPkgX64.dsc',                                TARGET: 'RELEASE', ARCH: 'X64',     TOOLCHAIN: 'VS2019',       ADDITIONAL_DEFINITION: '' },
        ]
    steps:
      - name: Checkout repositories
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup build environment
        shell: cmd
        run: |-
          curl -SL --output ${{ github.workspace }}\nasm-2.16.01-win64.zip https://www.nasm.us/pub/nasm/releasebuilds/2.16.01/win64/nasm-2.16.01-win64.zip
          powershell -Command "expand-archive -Path '${{ github.workspace }}\nasm-2.16.01-win64.zip' -DestinationPath 'c:\'"
          move c:\nasm-2.16.01 c:\nasm
          curl -SL --output ${{ github.workspace }}\iasl-win-20230628.zip https://downloadmirror.intel.com/783546/iasl-win-20230628.zip
          powershell -Command "expand-archive -Path '${{ github.workspace }}\iasl-win-20230628.zip' -DestinationPath 'c:\ASL'"
          curl -SL --output ${{ github.workspace }}\vs_buildtools.exe https://aka.ms/vs/16/release/vs_buildtools.exe
          ${{ github.workspace }}\vs_buildtools.exe --quiet --wait --norestart --add Microsoft.VisualStudio.Component.VC.CoreBuildTools --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 --add Microsoft.VisualStudio.Component.Windows11SDK.22000

      - name: Build BaseTools
        shell: cmd
        run: |-
          call ${{ github.workspace }}\utilities\vsenv.bat x86
          call ${{ github.workspace }}\edk2\edksetup.bat ${{ matrix.TOOLCHAIN }}
          cd ${{ github.workspace }}\edk2\BaseTools
          nmake

      - name: Build/Patch GenBin(Use for SctPkg)
        shell: cmd
        if: ${{ matrix.NAME == 'SctPkg' }}
        run: |-
          set path=%path%;${{ github.workspace }}\utilities\sed;
          xcopy /S edk2-test\uefi-sct\SctPkg\Tools\Source\GenBin edk2\BaseTools\Source\C\GenBin\
          sed -i 's+$(EDK_TOOLS_PATH)/Source/C+..+1' edk2/BaseTools/Source/C/GenBin/GNUmakefile
          cd edk2\BaseTools\Source\C\GenBin
          make
          xcopy /S edk2\BaseTools\BinWrappers\WindowsLike/GenCrc32 edk2\BaseTools\BinWrappers\WindowsLike\GenBin\

      - name: Patch for Python mod(Use for AppPkg Uefi Python support)
        shell: cmd
        if: ${{ matrix.NAME == 'AppPkg' }}
        run: |-
          set path=%path%;${{ github.workspace }}\utilities\sed;
          cd edk2-libc/AppPkg/Applications/Python/Python-3.6.8
          python srcprep.py
          cd ${{ github.workspace }}
          sed -i 's+# AppPkg/Applications/Python/Python-3.6.8/Python368.inf+AppPkg/Applications/Python/Python-3.6.8/Python368.inf+1' edk2-libc/AppPkg/AppPkg.dsc

      - name: Customize Patches for ShellPkg
        shell: cmd
        if: ${{ matrix.NAME == 'ShellPkg' }}
        run: |-
          set path=%path%;${{ github.workspace }}\utilities\sed;
          REM Remove 5 seconds delay to shell
          sed -i "s+gEfiShellPkgTokenSpaceGuid.PcdShellDefaultDelay|5|UINT32|0x00000015+gEfiShellPkgTokenSpaceGuid.PcdShellDefaultDelay|0|UINT32|0x00000015+1" edk2/ShellPkg/ShellPkg.dec
          REM Remove assert when enable debug mode
          sed -i "s+ASSERT_EFI_ERROR (Status);+// ASSERT_EFI_ERROR (Status);+g" edk2/ShellPkg/DynamicCommand/TftpDynamicCommand/Tftp.c
          REM Increase more screen buffers
          sed -i "/\[PcdsFixedAtBuild\]/a gEfiShellPkgTokenSpaceGuid.PcdShellScreenLogCount|10" edk2/ShellPkg/ShellPkg.dsc

      - name: Customize Patches for UefiPayloadPkg
        shell: cmd
        if: ${{ matrix.NAME == 'UefiPayloadPkg' }}
        run: |-
          REM Remove Keyboard self test
          sed -i '1734s/mWaitForValueTimeOut/\/\/mWaitForValueTimeOut/' edk2/MdeModulePkg/Bus/Isa/Ps2KeyboardDxe/Ps2KbdCtrller.c
          sed -i '1736s/Status = KeyboardWaitForValue/\/\/Status = KeyboardWaitForValue/' edk2/MdeModulePkg/Bus/Isa/Ps2KeyboardDxe/Ps2KbdCtrller.c
          sed -i '1737s/if (EFI_ERROR/\/\/if (EFI_ERROR/' edk2/MdeModulePkg/Bus/Isa/Ps2KeyboardDxe/Ps2KbdCtrller.c
          sed -i '1738s/KeyboardError (/\/\/KeyboardError (/' edk2/MdeModulePkg/Bus/Isa/Ps2KeyboardDxe/Ps2KbdCtrller.c
          sed -i '1739s/goto Done/\/\/goto Done/' edk2/MdeModulePkg/Bus/Isa/Ps2KeyboardDxe/Ps2KbdCtrller.c
          sed -i '1740s/}/\/\/}/' edk2/MdeModulePkg/Bus/Isa/Ps2KeyboardDxe/Ps2KbdCtrller.c

      - name: Build
        shell: cmd
        run: |-
          call ${{ github.workspace }}\utilities\vsenv.bat x64
          call ${{ github.workspace }}\edk2\edksetup.bat ${{ matrix.TOOLCHAIN }}
          set WORKSPACE=${{ github.workspace }}
          set PACKAGES_PATH=${{ github.workspace }}/edk2;${{ github.workspace }}/edk2-libc;${{ github.workspace }}/edk2-test;${{ github.workspace }}/edk2-platforms/Silicon/Intel;${{ github.workspace }}/edk2-platforms
          cd ${{ github.workspace }}\edk2
          build -a ${{ matrix.ARCH }} -t ${{ matrix.TOOLCHAIN }} -p ${{ matrix.PACKAGE }} -b ${{ matrix.TARGET }} ${{ matrix.ADDITIONAL_DEFINITION }}

# Ref to AppPkg/Applications/Python/Python-3.6.8/create_python_pkg.sh
      - uses: actions/upload-artifact@v4
        if: ${{ matrix.NAME == 'AppPkg' }}
        with:
          name: edk2_${{ matrix.NAME }}_${{ matrix.TARGET }}_${{ matrix.TOOLCHAIN }}_${{ matrix.ARCH }}_${{ github.sha }}
          retention-days: 14
          path: |-
            Build/**/*.efi
            Build/**/FV/*.fd
            Build/BUILDLOG*.*
            Build/CI_*.*
            Build/SETUPLOG.*
            Build/UPDATE*.*
            Build/**/AutoGen.*
            edk2-libc/AppPkg/Applications/Python/Python-3.6.8/Lib/
            edk2-libc/StdLib/Efi/StdLib/etc/

      - uses: actions/upload-artifact@v4
        if: ${{ matrix.NAME != 'AppPkg' }}
        with:
          name: edk2_${{ matrix.NAME }}_${{ matrix.TARGET }}_${{ matrix.TOOLCHAIN }}_${{ matrix.ARCH }}_${{ github.sha }}
          retention-days: 14
          path: |-
            Build/**/*.efi
            Build/**/FV/*.fd
            Build/BUILDLOG*.*
            Build/CI_*.*
            Build/SETUPLOG.*
            Build/UPDATE*.*
            Build/**/AutoGen.*
