diff --git c/uefi-sct/SctPkg/Include/Library/EfiTestLib.h i/uefi-sct/SctPkg/Include/Library/EfiTestLib.h
index 0dd35b0e..d69aee4e 100644
--- c/uefi-sct/SctPkg/Include/Library/EfiTestLib.h
+++ i/uefi-sct/SctPkg/Include/Library/EfiTestLib.h
@@ -292,44 +292,20 @@ Arguments:
   LINE                    - The line number in the test case's source file
 
 Returns:
 
   TRUE   if the test case can run
   FALSE  if the test case can not run
 
 --*/
 ;
 
-//
-// GUIDs for special usage
-//
-
-//
-// Generic Failure GUID is designed for the test environment issues or
-// the walking-on issues. It will be recorded in the log files, but will not be
-// summarized in the test report by the EFI SCT Suite.
-//
-#define TEST_GENERIC_FAILURE_GUID         \
-  { 0x6a8caa83, 0xb9da, 0x46c7, { 0x98, 0xf6, 0xd4, 0x96, 0x9d, 0xab, 0xda, 0xa0 }}
-
-extern EFI_GUID gTestGenericFailureGuid;
-
-//
-// Dummy GUID is designed as a temporary GUID that will be replaced with a
-// formal GUID later. It will be easy to use this GUID in prototype phase,
-// and then use a tool to do the replacement.
-//
-#define TEST_DUMMY_GUID                   \
-  { 0xece4bdd5, 0x8177, 0x448b, { 0x82, 0x03, 0x2d, 0x11, 0x0c, 0x1c, 0x20, 0xb8 }}
-
-extern EFI_GUID gTestDummyGuid;
-
 //
 // Global variables for the services tables
 //
 
 extern EFI_SYSTEM_TABLE          *gtST;
 extern EFI_BOOT_SERVICES         *gtBS;
 extern EFI_RUNTIME_SERVICES      *gtRT;
 extern EFI_DXE_SERVICES          *gtDS;
 
 #endif
diff --git c/uefi-sct/SctPkg/Library/EfiTestLib/EfiTestLib.c i/uefi-sct/SctPkg/Library/EfiTestLib/EfiTestLib.c
index b9b5a8b0..d15bb98c 100644
--- c/uefi-sct/SctPkg/Library/EfiTestLib/EfiTestLib.c
+++ i/uefi-sct/SctPkg/Library/EfiTestLib/EfiTestLib.c
@@ -21,27 +21,20 @@ Module Name:
 Abstract:
 
   EFI common test library.
 
 --*/
 #include "Efi.h"
 #include <Library/EfiTestLib.h>
 #include "SctLib.h"
 #include EFI_GUID_DEFINITION (DxeServices)
 
-//
-// Global IDs
-//
-
-EFI_GUID gTestGenericFailureGuid = TEST_GENERIC_FAILURE_GUID;
-EFI_GUID gTestDummyGuid          = TEST_DUMMY_GUID;
-
 //
 // Global variables
 //
 
 EFI_SYSTEM_TABLE          *gtST = NULL;
 EFI_BOOT_SERVICES         *gtBS = NULL;
 EFI_RUNTIME_SERVICES      *gtRT = NULL;
 EFI_DXE_SERVICES          *gtDS = NULL;
 
 //
diff --git c/uefi-sct/SctPkg/Library/EfiTestLib/EfiTestLib.inf i/uefi-sct/SctPkg/Library/EfiTestLib/EfiTestLib.inf
index e0261b7e..1c8b4944 100644
--- c/uefi-sct/SctPkg/Library/EfiTestLib/EfiTestLib.inf
+++ i/uefi-sct/SctPkg/Library/EfiTestLib/EfiTestLib.inf
@@ -36,16 +36,18 @@
 [Packages]
   MdePkg/MdePkg.dec
   SctPkg/SctPkg.dec
 
 [LibraryClasses]
   SctLib
 
 [Guids]
   gEfiNullGuid
   gEfiDxeServicesTableGuid
+  gTestGenericFailureGuid
+  gTestDummyGuid
 
 [Protocols]
   gEfiBbTestGuid
   gEfiStandardTestLibraryGuid
   gEfiIHVBbTestGuid
   gEfiWbTestGuid
diff --git c/uefi-sct/SctPkg/SctPkg.dec i/uefi-sct/SctPkg/SctPkg.dec
index 1c9e3099..1d19471a 100644
--- c/uefi-sct/SctPkg/SctPkg.dec
+++ i/uefi-sct/SctPkg/SctPkg.dec
@@ -35,29 +35,30 @@
   Include/Legacy
   TestInfrastructure/SCT/Drivers/Include
   TestInfrastructure/SCT/Framework
   TestInfrastructure/SCT/Framework/Include
   TestInfrastructure/SCT/Framework/ENTS/EasDispatcher/Include/
   TestInfrastructure/SCT/Framework/ENTS/Rivl
 
 [Guids.common]
   gEfiNullGuid = { 0x00000000, 0x0000, 0x0000, { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 }}
   gTestGenericFailureGuid = { 0x6a8caa83, 0xb9da, 0x46c7, { 0x98, 0xf6, 0xd4, 0x96, 0x9d, 0xab, 0xda, 0xa0 }}
+  gTestDummyGuid = { 0xece4bdd5, 0x8177, 0x448b, { 0x82, 0x03, 0x2d, 0x11, 0x0c, 0x1c, 0x20, 0xb8 }}
   gEfiGenericCategoryGuid = { 0x71652D04, 0xBF38, 0x434a, { 0xBC, 0xB8, 0x65, 0x47, 0xD7, 0xFD, 0x83, 0x84 }}
   gEfiBootServicesCategoryGuid = { 0xE9EF7553, 0xF833, 0x4e56, { 0x96, 0xE8, 0x38, 0xAE, 0x67, 0x95, 0x23, 0xCC }}
   gEfiRuntimeServicesCategoryGuid = { 0xAFF115FB, 0x387B, 0x4c18, { 0x8C, 0x41, 0x6A, 0xFC, 0x7F, 0x03, 0xBB, 0x90 }}
 
 [Protocols.common]
   gEfiTslInitInterfaceGuid = { 0x625c0828, 0xa47d, 0x493d, { 0xb7, 0x97, 0x97, 0x85, 0x55, 0x72, 0xdb, 0xc8 }}
   gEfiStandardTestLibraryGuid = { 0x1f9c2ae7, 0xf147, 0x4d19, { 0xa5, 0xe8, 0x25, 0x5a, 0xd0, 0x05, 0xeb, 0x3e }}
-  gEfiTestLoggingLibraryGuid = { 0x1ab99b08, 0x58c6, 0x40dd, { 0x86, 0xd8, 0xe8, 0xff, 0x2f, 0xa8, 0x4e, 0x4d }}
-  gEfiTestRecoveryLibraryGuid = { 0x7fd8c38d, 0x7c5c, 0x42fc, { 0xb0, 0x44, 0x3a, 0x83, 0x4a, 0x61, 0x74, 0x76 }}
+  gEfiTestLoggingLibraryGuid = { 0x1ab99b08, 0x58c6, 0x40dd, { 0x86, 0xd8, 0xe8, 0xff, 0x2f, 0xa8, 0x4e, 0x4d }}
+  gEfiTestRecoveryLibraryGuid = { 0x7fd8c38d, 0x7c5c, 0x42fc, { 0xb0, 0x44, 0x3a, 0x83, 0x4a, 0x61, 0x74, 0x76 }}
   gEfiEftpProtocolGuid = { 0x53228ef0, 0x04eb, 0x46bd, { 0x99, 0xe2, 0x7d, 0x09, 0x4e, 0x8f, 0x8e, 0x5d }}
   gEfiEftpServiceBindingProtocolGuid = { 0x67739d1a, 0x065c, 0x4b90, { 0x90, 0xfb, 0xca, 0x4a, 0xab, 0x4c, 0x46, 0xc1 }}
-  gEfiEntsMonitorProtocolGuid = { 0xf3f93305, 0x57e1, 0x43bf, { 0x96, 0x20, 0xf1, 0x4a, 0xb3, 0x31, 0xe2, 0x7d }}
+  gEfiEntsMonitorProtocolGuid = { 0xf3f93305, 0x57e1, 0x43bf, { 0x96, 0x20, 0xf1, 0x4a, 0xb3, 0x31, 0xe2, 0x7d }}
   gEfiBbTestGuid = { 0x8C41CE3E, 0xB255, 0x4966, { 0xB5, 0x3C, 0x39, 0x76, 0x5A, 0xE1, 0x11, 0xD0 }}
   gEfiIHVBbTestGuid = { 0x27e36cde, 0xa7e7, 0x4a4a, { 0x9b, 0x5f, 0xa3, 0x9a, 0x56, 0x75, 0xcb, 0x80 }}
   gEfiTestProfileLibraryGuid = { 0x832c9023, 0x8e67, 0x453f, { 0x83, 0xea, 0xdf, 0x71, 0x05, 0xfa, 0x74, 0x66 }}
   gEfiWbTestGuid = { 0x0B486CED, 0x25EB, 0x448a, { 0xB2, 0xB2, 0x22, 0x4E, 0x7A, 0x20, 0xCF, 0x57 }}
   gEfiEntsProtocolGuid = { 0x5bfcffb2, 0x84c0, 0x49f0, { 0x9a, 0x3a, 0x0, 0x71, 0x5f, 0xec, 0xfb, 0x32 }}
   gEfiPeiFlushInstructionCacheGuid = { 0xd8117cfc, 0x94a6, 0x11d4, { 0x9a, 0x3a, 0x0, 0x90, 0x27, 0x3f, 0xc1, 0x4d }}
   gEfiPeiPeCoffLoaderGuid = { 0xd8117cff, 0x94a6, 0x11d4, { 0x9a, 0x3a, 0x0, 0x90, 0x27, 0x3f, 0xc1, 0x4d }}
diff --git c/uefi-sct/SctPkg/TestCase/RIVL/Protocol/Mtftp4/Mtftp4/Mtftp4ENTSTest.c i/uefi-sct/SctPkg/TestCase/RIVL/Protocol/Mtftp4/Mtftp4/Mtftp4ENTSTest.c
index ecc75d9b..d3198625 100644
--- c/uefi-sct/SctPkg/TestCase/RIVL/Protocol/Mtftp4/Mtftp4/Mtftp4ENTSTest.c
+++ i/uefi-sct/SctPkg/TestCase/RIVL/Protocol/Mtftp4/Mtftp4/Mtftp4ENTSTest.c
@@ -62,24 +62,26 @@ ENTS_INTERFACE    gMtftp4EntsInterfaceList[] = {
   {
     L"ReadDirectory",
     Mtftp4ReadDirectory_EntsTest,
     gMtftp4ReadDirectoryArgField
   },
   {
     L"Poll",
     Mtftp4Poll_EntsTest,
     gMtftp4PollArgField
   },
-  NULL
+  {
+    0
+  }
 };
 
-EFI_ENTS_PROTOCOL *gMtftp4EntsProtocolInterface = NULL;
+EFI_ENTS_PROTOCOL *gMtftp4EntsProtocolInterface = 0;
 
 EFI_STATUS
 EFIAPI
 Mtftp4ENTSTestUnload (
   IN EFI_HANDLE                ImageHandle
   );
 
 
 EFI_STATUS
 EFIAPI
diff --git c/uefi-sct/SctPkg/TestCase/RIVL/Protocol/Udp4/Udp4/Udp4ENTSTestCase.c i/uefi-sct/SctPkg/TestCase/RIVL/Protocol/Udp4/Udp4/Udp4ENTSTestCase.c
index e56669d3..dc978668 100644
--- c/uefi-sct/SctPkg/TestCase/RIVL/Protocol/Udp4/Udp4/Udp4ENTSTestCase.c
+++ i/uefi-sct/SctPkg/TestCase/RIVL/Protocol/Udp4/Udp4/Udp4ENTSTestCase.c
@@ -47,21 +47,23 @@ ENTS_ARG_FIELD                          gUdp4GetModeDataArgField[] = {
     &GetModeData_MnpConfigData
   },
   {
     POINTER,
     &GetModeData_SnpModeData
   },
   {
     POINTER,
     &GetModeData_Status
   },
-  0
+  {
+    0
+  }
 };
 
 EFI_STATUS
 EFIAPI
 Udp4GetModeData_EntsTest (
   VOID *ClientInterface
   )
 /*++
 
 Routine Description:
@@ -106,21 +108,23 @@ static IN EFI_UDP4_CONFIG_DATA  *Configure_UdpConfigData;
 
 ENTS_ARG_FIELD                  gUdp4ConfigureArgField[] = {
   {
     POINTER,
     &Configure_UdpConfigData
   },
   {
     POINTER,
     &Configure_Status
   },
-  0
+  {
+    0
+  }
 };
 
 EFI_STATUS
 EFIAPI
 Udp4Configure_EntsTest (
   VOID *ClientInterface
   )
 /*++
 
 Routine Description:
@@ -167,21 +171,23 @@ ENTS_ARG_FIELD          gUdp4GroupsArgField[] = {
     &Groups_JoinFlag
   },
   {
     POINTER,
     &Groups_MulticastAddress
   },
   {
     POINTER,
     &Groups_Status
   },
-  0
+  {
+    0
+  }
 };
 
 EFI_STATUS
 EFIAPI
 Udp4Groups_EntsTest (
   VOID *ClientInterface
   )
 /*++
 
 Routine Description:
@@ -239,21 +245,23 @@ ENTS_ARG_FIELD          gUdp4RoutesArgField[] = {
     &Routes_SubnetMask
   },
   {
     POINTER,
     &Routes_GatewayAddress
   },
   {
     POINTER,
     &Routes_Status
   },
-  0
+  {
+    0
+  }
 };
 
 EFI_STATUS
 EFIAPI
 Udp4Routes_EntsTest (
   VOID *ClientInterface
   )
 /*++
 
 Routine Description:
@@ -293,21 +301,23 @@ Returns:
 //
 // Udp4.Poll
 //
 static EFI_STATUS *Poll_Status;
 
 ENTS_ARG_FIELD    gUdp4PollArgField[] = {
   {
     POINTER,
     &Poll_Status
   },
-  0
+  {
+    0
+  }
 };
 
 EFI_STATUS
 EFIAPI
 Udp4Poll_EntsTest (
   VOID *ClientInterface
   )
 /*++
 
 Routine Description:
@@ -346,21 +356,23 @@ static EFI_UDP4_COMPLETION_TOKEN  *Receive_Token;
 
 ENTS_ARG_FIELD                    gUdp4ReceiveArgField[] = {
   {
     POINTER,
     &Receive_Token
   },
   {
     POINTER,
     &Receive_Status
   },
-  0
+  {
+    0
+  }
 };
 
 EFI_STATUS
 EFIAPI
 Udp4Receive_EntsTest (
   VOID *ClientInterface
   )
 /*++
 
 Routine Description:
@@ -402,21 +414,23 @@ static EFI_UDP4_COMPLETION_TOKEN  *Transmit_CompletionToken;
 
 ENTS_ARG_FIELD                    gUdp4TransmitArgField[] = {
   {
     POINTER,
     &Transmit_CompletionToken
   },
   {
     POINTER,
     &Transmit_Status
   },
-  0
+  {
+    0
+  }
 };
 
 EFI_STATUS
 EFIAPI
 Udp4Transmit_EntsTest (
   VOID *ClientInterface
   )
 /*++
 
 Routine Description:
@@ -458,21 +472,23 @@ static EFI_UDP4_COMPLETION_TOKEN  *Cancel_Token;
 
 ENTS_ARG_FIELD                    gUdp4CancelArgField[] = {
   {
     POINTER,
     &Cancel_Token
   },
   {
     POINTER,
     &Cancel_Status
   },
-  0
+  {
+    0
+  }
 };
 
 EFI_STATUS
 EFIAPI
 Udp4Cancel_EntsTest (
   VOID *ClientInterface
   )
 /*++
 
 Routine Description:
@@ -514,21 +530,23 @@ static EFI_UDP4_COMPLETION_TOKEN  *Completion_Token;
 
 ENTS_ARG_FIELD                    gUdp4SignalRecycleEventArgField[] = {
   {
     POINTER,
     &Completion_Token
   },
   {
     POINTER,
     &SignalRecycleEvent_Status
   },
-  0
+  {
+    0
+  }
 };
 
 EFI_STATUS
 EFIAPI
 Udp4SignalRecycleEvent_EntsTest (
   VOID *ClientInterface
   )
 /*++
 
 Routine Description:
